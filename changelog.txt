1.6.4.11

Backport SIGMA changes from 2.1.0.9 releases - see 2.1.0.9 changelog for more information.




1.6.4.8

Minor maintenence release.
UI - Introduce a new informational widget and other minor UI improvements that make it move obvious to users that the wallet is not yet available during initial sync.
UI - Add a new menu item for setting the currency.
UI - Fix a crash in the send dialog on machines with no network connection.
UI - Remove bitcoin payment option from send screen
CORE - Update checkpoints, static difficulties, static seeds and other static information to help assist new users with better syncing experience.


1.6.4.7

Minor testnet related release.

1.6.4.6

RPC - Fix an issue introduced in 1.6.4.3 which can cause users running with "-disablewallet" to experience RPC freezes when calling certain RPC commands.

1.6.4.5

UI - Fix "run on boot" links that were broken by testnet changes and other minor "run on boot" corrections.

1.6.4.4

RPC - Fix an issue with the 'unlock' callback of 'walletpassphrase' whereby it could temporarily freeze the main RPC thread. In most cases this would result in slow RPC but in extreme cases it could be so slow that the slowness would then cascade into other parts of the program (e.g. peers timing out) presenting as a frozen RPC that no longer 
responds.

1.6.4.3

Maintenance release in preparation for 2.0 release. 
CORE - Backport new testnet from 2.0 branch, this is required in order to beta test 2.0 upgrades correctly. 
CORE - Introduce some corrections/changes to all mutex related code in an attempt to fix some occasional RPC freezes that are intermittently occurring. 
CORE - Pre-emptively patch/fix against a potential but unlikely DDoS attack that could be used to try temporarily make specific nodes inaccessible. 
CORE - Fix a minor issue with encrypted non-HD wallets where it was necessary to input the password on every GuldenD restart. 
MISC - Update all nocks calls to use the new nocks.com API. 
MISC - Clean up some unnecessary logging to keep log files small. 
MISC - Periodic update of checkpoints and other hardcoded wallet information. 
CMDFLAG - Fix issue with genkeypair command. 

1.6.4.2

Minor bugfix release.
RPC - Fix some balance calculation issues.

1.6.4.1

Minor bugfix release.
UI - Some small translation changes
RPC - Add an HDIndex flag to 'listaccounts' RPC output, useful for debugging HD wallet issues.
CORE - Speed up address allocation when -keypool is set to a larger than default size.

1.6.4

CMDFLAG - Add new command line flag '-coinbasesignature' to make it easy to add coinbase signatures to generated blocks (predominantly meant for testnet)
CMDFLAG - Add new command line flag '-accountpool' to increase the default account look ahead size. (Needed in some cases to find accounts on rescan when large account gaps are present)
UI - Add a special warning if the users wallet.dat is readonly (instead of displaying a generic/scary 'corrupted wallet' message)
UI - Improvements to send dialog, improve handling when user tries to send amounts equal too or larger than available balance.
UI - New menu item for importing private keys.
UI - New menu item to allow users to easily rescan without having to use command line flags or mess around in RPC console.
UI - Improve the way rescan (and other actions that require progress) display in the program.
UI - Fix a bug where transaction screen would sometimes show transactions for all accounts instead of just the active one.
RPC - Modify createaccount command so that it can also create legacy accounts.
RPC - New commands for read only (watch) HD accounts. getreadonlyaccount, importreadonlyaccount.
RPC - New command for read only (watch) HD seeds, getreadonlyseed.
RPC - New 'deleteaccount' command
RPC - Modify 'move' command so that it can handle `-1` as input for the amount field, passing '-1' will calculate the available balance in the account for the confirmation level passed and transfer all of it.
RPC - Merge a bug fix from user 'mezrin' for 'dumpwallet' command.
RPC - Fix a bug in command 'gettransaction' where transaction would not show if 'rpconlylistsecuredtransactions' flag was set to false.
CORE/RPC/UI - Support for read only (watch) HD accounts.
CORE/RPC/UI - Support for read only (watch) HD seeds.
CORE - Assorted other minor bug fixes.

1.6.3

RPC - Fix incorrect getaddressesbyaccount output.
Fix a possible crash in the checkpoint system.

1.6.2

RPC - Bring back command that was removed in 1.6.0, adapted to the new account system - getaccount "Guldenaddress"
RPC - Bring back command that was removed in 1.6.0, adapted to the new account system - getaddressesbyaccount "account"

1.6.1

Minor bugfix release.

1.6.0

UI - New user interface with drastic improvements over the old user interface.
UI - Ticker/Exchange rate integration into app.
UI - In wallet support for buying coins with euro via nocks.
UI/RPC/CORE - New 'account based' wallet internals.
UI - New in wallet buy support for bitcoin and IBAN via nocks API.
UI/RPC/CORE - Full support for BIP33 and BIP44 HD wallet standards with mnemonics.
UI/CORE - Implement support for synchronised mobile accounts.
CORE - Update to upstream bitcoin 0.13 codebase providing numerous bug fixes and improvements.
Improve the checkpointing code, fix a checkpoint corruption issue that some users were experiencing.
RPC - Change 'rpconlylistsecuredtransactions' to be on by default.


1.5.5

CORE - Introduce a checkpoint system to protect against 50% attacks.
UI - Update the UI so that only checkpointed transactions are marked as 'final'
RPC - Update several commands so that exchanges can make use of the checkpoint system to be double spend proof.



1.5.4

Minor bugfix release.



1.5.3

Minor bugfix release.



1.5.2

Minor bugfix release.
CORE - Updated to new seed nodes.
UI - Fixed an issue with some external URIs not working on OSX machines.
CORE - Add the KGW fix to all platforms.



1.5.1

UI - Rebrand to Gulden, updated UI.
CORE - Implement a fix for KGW difficulty algorithm on 32 bit systems - linux only.



1.5.0

CORE- New updated codebase based on bitcoin 0.10/0.11
CORE - Impement a new difficulty adjustment algorithm named DELTA.
